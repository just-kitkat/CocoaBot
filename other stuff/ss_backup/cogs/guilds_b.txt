import discord
from vars import *
from discord.ext import commands

class Dev(commands.Cog, name = "Guild Commands"):

  def __init__(self, bot):
    self.bot = bot

  @commands.command(aliases = ["g", "guilds"])
  async def guild(self, ctx, arg1 = None, arg2 = None, *, arg3 = None):
    "`.g help` for guild related commands"
    if arg1 == "help":
      title, message, color = "Guild Help", "Coming soon!", discord.Color.blurple()
    elif str(ctx.author.id) in self.bot.db["economy"]["users"]:
      user = ctx.author.id 
      title = "Guilds"
      color = green
      balance = self.bot.db["economy"]["users"][str(user)]["balance"]
      income = await self.bot.get_income(user)
  
      guild_income_req = 20000
      guild_bal_req = 1000000
      if arg1 is None:
        color = discord.Color.red()
        if self.bot.db["economy"]["users"][str(user)]["guild"] != "":
          guild_name = self.bot.db["economy"]["users"][str(user)]["guild"]
          guild_members = len(self.bot.db["economy"]["guild"][guild_name]["members"])
          guild_level = self.bot.db["economy"]["guild"][guild_name]["level"]
          guild_xp = self.bot.db["economy"]["guild"][guild_name]["xp"]
          guild_xpneeded = self.bot.db["economy"]["guild"][guild_name]["xp_needed"]
          rank = self.bot.db["economy"]["guild"][guild_name]["members"][str(user)]["rank"]
          guild_xp_mult = self.bot.db["economy"]["guild"][guild_name]["xp_mult"]
          user_donate = self.bot.db["economy"]["guild"][guild_name]["members"][str(user)]["donate"]
          guild_tag = self.bot.db["economy"]["guild"][guild_name]["tag"]
          if guild_tag == "": 
            guild_tag_format = f"No tag set! `{self.bot.prefix}g tag <tag>`" 
          else:
            guild_tag_format = f"**{guild_tag}**"
          color = discord.Color.green()
          
          guild_bal = 0
          for i in self.bot.db["economy"]["guild"][guild_name]["members"]:
            guild_bal += self.bot.db["economy"]["guild"][guild_name]["members"][i]["donate"]
            
          emoji = ""
          xp_emoji = "ðŸŸ©"
          no_xp_emoji = "â¬›"
          levels = int(guild_xp/guild_xpneeded * 10)
          for i in range(0, levels):
            emoji += xp_emoji
          for i in range(0, 10 - levels):
            emoji += no_xp_emoji
          message = f"""
  Guild: **{guild_name}** | `{guild_members}` members
  Rank: {rank.title()}
  Tag: {guild_tag_format}
  Guild Balance: **{guild_bal:,} {coin}**
  Xp Multiplier: **{guild_xp_mult}x**
          
  Level: **{guild_level}** \n{emoji} `({guild_xp} / {guild_xpneeded})`
  *Use `{self.bot.prefix}help guild` to view guild commands!*
  """
        else:
          message = f"You are not in a guild! *Use `{self.bot.prefix}help guild` to view guild commands.*"
      # CMDS THAT REQUIRE U NOT TO BE IN A GUILD
      elif arg1 in ("create", "join"):
        if self.bot.db["economy"]["users"][str(user)]["guild"] == "":
          # CREATE
          if arg1 == "create":
            if income >= guild_income_req and balance >= guild_bal_req:
              if arg2 is not None and len(arg2) < 15 and arg3 is None:
                guild_list = []
                for guild in self.bot.db["economy"]["guild"]:
                  guild_list.append(guild.lower())
                if arg2.lower() not in guild_list:
                  self.bot.db["economy"]["guild"][arg2] = {"level" : 0, "balance" : 0, "tag" : "", "invites" : [], "members" :{str(user) : {"rank" : "owner", "donate" : 0}}, "income_mult" : 2, "owner" : str(user), "xp" : 0, "xp_needed" : 100, "xp_mult" : 1}
                  
                  self.bot.db["economy"]["users"][str(user)]["guild"] = arg2
                  self.bot.db["economy"]["users"][str(user)]["balance"] -= guild_bal_req
                  title = "Guild created!"
                  message = f"{tick} You have created a guild! Invite your friends using `{self.bot.prefix}g invite <user>`!"
                  await self.bot.log_action(ctx, "guild", f"**{ctx.author}** ({ctx.author.id}) has created a guild called **{arg2}**")
                else:
                  color = red
                  message = f"{cross} This guild already exists! Please choose another name!"
              elif arg2 is None:
                color = red
                message = f"{cross} Please use `{self.bot.prefix}g create <name>` to create a guild!"
              elif len(arg2) > 15:
                color = red
                message = f"{cross} Make sure your guild name is not longer than 14 characters!"
              elif arg3 is not None:
                color = red
                message = f"{cross} Make sure your guild name has no spaces!"
            else:
              color = red
              message = f"{cross} You need an income of **{guild_income_req} {coin}** and a balance of **{guild_bal_req} {coin}** to create a guild!"
  
          # JOIN GUILD    
          elif arg1 == "join":
            if arg2 is not None and arg2 in self.bot.db["economy"]["guild"] and str(user) in self.bot.db["economy"]["guild"][arg2]["invites"]:
              message = f"{tick} You have successfully joined **{arg2}**!"
              self.bot.db["economy"]["guild"][arg2]["invites"].remove(str(user))
              self.bot.db["economy"]["guild"][arg2]["members"][str(user)] = {"rank" : "member", "donate" : 0}
              self.bot.db["economy"]["users"][str(user)]["guild"] = arg2
              notify_msg = f"**{ctx.author}** just joined your guild! "
              await self.bot.notify_user(ctx, int(db["economy"]["guild"][arg2]["owner"]), "green", notify_msg)
              await self.bot.log_action(ctx, "guild", f"**{ctx.author}** ({ctx.author.id}) has joined **{arg2}**")
            elif arg2 not in self.bot.db["economy"]["guild"]:
              message, color = f"{cross} That guild does not exist! Make sure you have typed in the name correctly! (Guild names are case-sensitive!)", red
            elif str(user) not in self.bot.db["economy"]["guild"][arg2]["invites"]:
              message, color = f"{cross} You do not have an invite to join **{arg2}**", red
            elif arg2 is None:
              message, color = f"{cross} Please use `{self.bot.prefix}g join <guild name>`", red
            
        else:
          message, color = f"You are already in a guild! *Use `{self.bot.prefix}g leave` to leave your guild!*", red
  
      # CMDS THAT REQUIRE YOU TO BE IN A GUILD
      elif arg1 in ("invite", "uninvite", "list", "kick", "leave", "donate", "tag"):
        if self.bot.db["economy"]["users"][str(user)]["guild"] != "":
          guild_name = self.bot.db["economy"]["users"][str(user)]["guild"]
          guild_level = self.bot.db["economy"]["guild"][guild_name]["level"]
          guild_members = len(self.bot.db["economy"]["guild"][guild_name]["members"])
          user_rank = self.bot.db["economy"]["guild"][guild_name]["members"][str(user)]["rank"]
          invites = self.bot.db["economy"]["guild"][guild_name]["invites"]
          guild_admins = ["owner", "co owner"]
          guild_tag = self.bot.db["economy"]["guild"][guild_name]["tag"]
  
          # ADMINS
          if user_rank in guild_admins:
            # INVITE LOGIC
            if arg1 == "invite":
              is_user = False
              if arg2 is not None:
                arg2 = await self.bot.id_from_ping(arg2)
                try:
                  arg2 = self.bot.get_user(int(arg2))
                  is_user = True
                except:
                  pass
              try:
                if str(arg2.id) not in self.bot.db["economy"]["users"]:
                  is_user = False
              except:
                is_user = False
              if arg2 is not None and is_user and str(arg2.id) not in invites and user != arg2.id and self.bot.db["economy"]["users"][str(arg2.id)]["guild"] == "":
                self.bot.db["economy"]["guild"][guild_name]["invites"].append(str(arg2.id))
                message = f"{tick} You have successfully invited **{arg2.name}** to join **{guild_name}**! They have been notified and can join using `{self.bot.prefix}g join <guild name>`"
                notify_message = f"You have been invited by **{ctx.author.name}** to join a guild! \nGuild name: **{guild_name}** \nGuild Members: **{guild_members}** \nGuild level: **{guild_level}** \nUse `{self.bot.prefix}guild join {guild_name}` to join the guild!"
                await self.bot.notify_user(ctx, arg2.id, "green", notify_message)
                await self.bot.log_action(ctx, "guild", f"**{ctx.author}** has invited {arg2} ({arg2.id}) to join **{guild_name}**")
              elif arg2 is None:
                message, color = f"{cross} Please use `{self.bot.prefix}g invite <user>`!", red
              elif not is_user:
                message, color = f"{cross} User not found! Please use `{self.bot.prefix}g invite <user>`", red
              
              elif str(arg2.id) in invites:
                message, color = f"{cross} **{arg2.name}** has already been invited to your guild!", red
              elif user == arg2.id:
                message, color = f"{cross} You cannot invite yourself!", red
              elif self.bot.db["economy"]["users"][str(arg2.id)]["guild"] != "":
                message, color = f"{cross} That user is already in a guild!", red
    
            elif arg1 == "uninvite":
              is_user = False
              if arg2 is not None:
                arg2 = await self.bot.id_from_ping(arg2)
                try:
                  arg2 = self.bot.get_user(int(arg2))
                  is_user = True
                except:
                  pass
                if str(arg2.id) not in self.bot.db["economy"]["users"]:
                  is_user = False
                if not is_user:
                  message, color = f"{cross} User not found! Please use `{self.bot.prefix}g invite <user>`", red
                elif is_user and user_rank in guild_admins and str(arg2.id) in invites:
                  self.bot.db["economy"]["guild"][guild_name]["invites"].remove(str(arg2.id))
                  message = f"{tick} **{arg2.name}** has been removed from the guild's invite list!"
                elif user_rank not in guild_admins:
                  message, color = f"{cross} You are not a guild admin!", red
                elif str(arg2.id) not in invites:
                  message, color = f"{cross} **{arg2.name}** has already been invited to your guild!", red
              else:
                message, color = f"{cross} Please use `{self.bot.prefix}g uninvite <user>`!", red
  
            # Kicking users
            elif arg1 == "kick":
              is_user = False
              if arg2 is not None:
                arg2 = await self.bot.id_from_ping(arg2)
                try:
                  arg2 = self.bot.get_user(int(arg2))
                  is_user = True
                except:
                  pass
              if not is_user or arg2 is None or str(arg2.id) not in self.bot.db["economy"]["users"]:
                message, color = f"{cross} User not found! Please use `{self.bot.prefix}g kick <user>`", red
              elif user != arg2.id and str(arg2.id) in self.bot.db["economy"]["guild"][guild_name]["members"]:
                if arg3 is None:
                  message, color = f"{cross} You must provide a reason! Please use `{self.bot.prefix}g kick <user> <reason>`", red
                else:
                  self.bot.db["economy"]["guild"][guild_name]["members"].pop(str(arg2.id))
                  self.bot.db["economy"]["users"][str(arg2.id)]["guild"] = ""
                  message = f"{tick} **{arg2.name}** has been kicked from your guild!"
                  await self.bot.notify_user(ctx, arg2.id, "red", f"You have been kicked from **{guild_name}**. \nReason: **{arg3}**")
                  await self.bot.log_action(ctx, "guild", f"**{ctx.author}** ({ctx.author.id}) has kicked {arg2} ({arg2.id}) from **{guild_name}**")
              elif user == arg2.id:
                message, color = f"{cross} You turn around and gave yourself a hard kick. Hope that makes you happy.", red
              elif str(arg2.id) not in self.bot.db["economy"]["guild"][guild_name]["members"]:
                message, color = f"{cross} That user is not in your guild!", red
  
            # Guild Tag
            elif arg1 == "tag":
              title, color = "Guild Tag", red
              if guild_level >= 3:
                if arg2 is None:
                  if guild_tag == "":
                    message = f"{cross} Oops, looks like you do not have a guild tag... Use `{self.bot.prefix}g tag <tag>` to create one!"
                  else:
                    message, color = f"Your current guild tag is **{guild_tag}**. Use `{self.bot.prefix}g tag <tag>` to change it!", green
  
                else:
                  if arg2 == "remove":
                    self.bot.db["economy"]["guild"][guild_name]["tag"] = ""
                    message, color = f"{tick} Your guild tag has been removed!", green
                  elif len(arg2) == 4:
                    valid = True
                    for char in list(arg2):
                      if not (char.isalpha() or char.isnumeric()):
                        message = f"{cross} The guild tag can only contain letters and numbers!"
                        valid = False
                        break
                    if valid:
                      arg2 = arg2.upper()
                      for guild in self.bot.db["economy"]["guild"]:
                        if self.bot.db["economy"]["guild"][guild]["tag"] == arg2:
                          message = f"{cross} That tag already exists! Try using a different tag!"
                          valid = False
                          break
                    if valid:
                      self.bot.db["economy"]["guild"][guild_name]["tag"] = arg2
                      message, color = f"{tick} Your guild tag has been set to **{arg2}**!", green
                        
                  else:
                    message = f"{cross} Your tag must be 4 characters long!"
              else:
                message = f"{cross} Your guild needs to be level 3 to unlock a guild tag!"
          else:
            message = f"{cross} You are not a guild admin!"
  
          # Guild member list
          if arg1 == "list":
            members = ""
            color = green
            for i in self.bot.db["economy"]["guild"][guild_name]["members"]:
              if self.bot.db["economy"]["guild"][guild_name]["members"][i]["rank"] != "owner":
                members += f"{bot.get_user(int(i)).mention} \n"
              else:
                owner = self.bot.get_user(int(i)).mention
            title, message = guild_name, f"Guild members: {guild_members} \n**Owner:** \n**{owner}** \n**Members:** \n{members}"
  
          # Donation
          elif arg1 == "donate":
            title = "Guild Donation"
            try:
              arg2 = int(arg2)
              if arg2 > balance:
                message, color = f"{cross} Debt is not an option! Current balance: **{balance} {coin}**", red
              elif arg2 < 1:
                message, color = f"{cross} Are you trying to trick the system? Please donate an amount more than 0!", red
              else:
                self.bot.db["economy"]["guild"][guild_name]["members"][str(user)]["donate"] += arg2
                message, color = f"You have donated **{arg2} {coin}** to the guild! Use `{self.bot.prefix}g shop` to view the shop!", green
            except:
              message, color = f"Please use `{self.bot.prefix}g donate <amount>`", red
            
  
          # Leaving Guild
          if arg1 == "leave":
            if user_rank != "owner":
              self.bot.db["economy"]["guild"][guild_name]["members"].pop(str(user))
              self.bot.db["economy"]["users"][str(user)]["guild"] = ""
              message, color = f"{tick} You successfully left **{guild_name}**.", green
              await self.bot.notify_user(ctx, self.bot.db["economy"]["guild"][guild_name]["owner"], red, f"**{bot.get_user(user)}** has left your guild.")
              await self.bot.log_action(ctx, "guild", f"**{ctx.author}** ({ctx.author.id}) has left **{arg2}**")
            else:
              message, color = f"{cross} You are the owner of **{guild_name}** and cannot leave it! To disband your guild, use `{self.bot.prefix}g disband`.", red
              
        else:
          message, color = f"{cross} You are not in a guild!", red
      else:
        message, color = f"{cross} Command not found! Please use `{self.bot.prefix}help guild` to view all available commands!", red
          
    else:
      title, message, color = bot_name, f"{cross} You do not own a dessert shop. Use `{self.bot.prefix}build` to build one!",discord.Color.red()
      
    embed = discord.Embed(
        title = title,
        description = message,
      color = color
    )
    await ctx.reply(embed = embed, mention_author = False)

def setup(bot):
  bot.add_cog(Dev(bot))